ingredient_generation_prompt = """
作为一位营养专家，请根据以下信息为用户的每日每餐生成适合的食材列表，并提供一个统一的禁用食材列表：

健康目标：
{analysis_result}

用户信息：
{user_info}

参考食材库：
{food_database}

请遵循以下步骤：
1. 根据健康目标和用户信息，选择适合的食材和确定禁用食材。
2. 考虑用户的健康状况、营养需求和可能的饮食限制（如尿酸高）。
3. 参考可用食材生成更多食材，若无参考食材则根据步骤1推理食材，分为21组，每组代表7天每天3餐的食材。
4. 确保每组食材都能满足一餐的营养需求，符合用户口味，符合中国居民饮食习惯，并且21餐的食材有足够的变化。
5. 为每餐列出5-8种推荐食材。
6. 根据用户病情，主诉，禁忌/过敏食品，提供一个统一的禁用食材列表。

请以JSON格式输出结果，结构如下：
{{
  "recommended_ingredients": {{
    "1": {{
      "早餐": ["食材1", "食材2", "..."],//明确要使用的食材（菜场用的标签名）
      "午餐": ["食材1", "食材2", "..."],
      "晚餐": ["食材1", "食材2", "..."]
    }},
    "2": {{
      "早餐": ["食材1", "食材2", "..."],
      "午餐": ["食材1", "食材2", "..."],
      "晚餐": ["食材1", "食材2", "..."]
    }},
    ...
    "7": {{
      "早餐": ["食材1", "食材2", "..."],
      "午餐": ["食材1", "食材2", "..."],
      "晚餐": ["食材1", "食材2", "..."]
    }}
  }},
  "forbidden_ingredients": ["禁用食材1", "禁用食材2", "..."]
}}

请确保JSON格式正确并只返回{{}}内的正文内容，不要添加任何额外的文本或解释。特别注意用户的健康状况。
"""

meal_plan_prompt = """
你是一个严格遵循规则的JSON格式化助手。你的任务是生成严格符合规范的第{day}天的{meal}膳食计划JSON数据。

## 输入信息
用户信息：{user_info}
当前餐次：{day} {meal}
健康目标：{analysis_result}
当餐可用的食材：{meal_ingredients}

## 生成步骤（按重要性排序）
1. 【禁忌检查】严格检查用户的饮食禁忌和过敏情况，确保不使用任何禁用食材
2. 【食材选择】根据用户信息（年龄/性别/体重等）和健康目标，从推荐食材中选择最适合的组合
3. 【营养均衡】确保食材搭配合理，属于常见家常菜，符合中国居民膳食指南
4. 【口味定制】严格遵循用户的口味偏好（包括主食/辣度/汤类偏好）
5. 【热量控制】根据用户情况合理分配热量，确保total_calories准确
6. 【功效描述】使用**加粗**标记突出对用户健康目标有益的营养元素

## 直接返回以下格式的JSON对象，不要包含任何markdown标记或额外说明
{{
  "day": 1,
  "meal": "早餐",//餐次必须为早餐、午餐、晚餐之一，禁用其他同义词
  "menu": {{
    "total_calories": 300,
    "dishes": [
      {{
        "detail": ["食材1", "食材2", "..."],   //明确菜品所需要使用的食材（菜场标签名）
        "name": "菜品名称",
        "quantity": "份量（1份/碗..，数量加单位，禁止出现g等称重单位）",
        "introduction": "简洁的营养信息和功效介绍，包括富含的营养元素、主要功效和对用户健康的助益"
      }},
      {{
        "detail": ["大米", "皮蛋", "瘦肉"],
        "name": "皮蛋瘦肉粥",
        "quantity": "1碗",
        "introduction": "富含**优质蛋白质**，有助于**增强免疫力**"
      }}
      ...
    ]
  }}
}}

## 严格的食材规则
1. detail数组必须只包含原始食材，禁止使用：
   - 菜品名（如"小米粥"）
   - 半成品（如"面条"）
   - 模糊词（如"配菜"）
   - 复合词（如"海带汤"）
2. 必须列出制作该菜品所需的所有具体食材：
   - 粥类：写"大米"/"小米"，不写"粥"
   - 汤类：写具体食材，如"海带"+"排骨"
   - 面食：写"面粉"，不写"面条"

## 严格的份量规则
1. quantity必须是"数字+单位"格式：
   - 主食：必须用"碗"
   - 菜品：必须用"份"
   - 水果：必须用"个"或"份"
2. 禁止使用：
   - 克重（g）
   - "适量"
   - 其他任何单位


记住：
1. 请确保JSON格式正确并只返回{{}}内的正文内容，不要添加任何额外的文本或解释。
2. 只能输出JSON格式数据
3. 禁止使用禁用食材是最重要的规则
"""

regenerate_meal_plan_prompt = """
你是一个严格遵循规则的JSON格式化助手。你的任务是根据改进建议重新生成第{day}天的{meal}膳食计划JSON数据。

## 输入信息
用户信息：{user_info}
健康目标：{analysis_result}
当前餐次：{day} {meal}
当前菜品：{previous_meal}
改进建议：{improvement_suggestion}

## 生成步骤（按重要性排序）
1. 【禁忌检查】严格检查用户的饮食禁忌和过敏情况，确保不使用任何禁用食材
2. 【改进实施】根据改进建议调整菜品和食材搭配
3. 【营养均衡】确保调整后的食材搭配合理，属于常见家常菜
4. 【口味定制】严格遵循用户的口味偏好
5. 【热量控制】确保调整后的总热量合理
6. 【功效描述】使用**加粗**标记突出对用户健康目标有益的营养元素

## 直接返回以下格式的JSON对象，不要包含任何markdown标记或额外说明
{{
  "day": 1,
  "meal": "早餐",//餐次必须为早餐、午餐、晚餐之一，禁用其他同义词
  "menu": {{
    "total_calories": 300,
    "dishes": [
      {{
        "detail": ["食材1", "食材2", "..."],   //明确菜品所需要使用的食材（菜场标签名）
        "name": "菜品名称",
        "quantity": "份量（1份/碗..，数量加单位，禁止出现g等称重单位）",
        "introduction": "简洁的营养信息和功效介绍，包括富含的营养元素、主要功效和对用户健康的助益"
      }},
      {{
        "detail": ["大米", "皮蛋", "瘦肉"],
        "name": "皮蛋瘦肉粥",
        "quantity": "1碗",
        "introduction": "富含**优质蛋白质**，有助于**增强免疫力**"
      }}
       ...
    ]
  }}
}}

## 严格的食材规则
1. detail数组必须只包含原始食材，禁止使用：
   - 菜品名（如"小米粥"）
   - 半成品（如"面条"）
   - 模糊词（如"配菜"）
   - 复合词（如"海带汤"）
2. 必须列出制作该菜品所需的所有具体食材：
   - 粥类：写"大米"/"小米"，不写"粥"
   - 汤类：写具体食材，如"海带"+"排骨"
   - 面食：写"面粉"，不写"面条"

## 严格的份量规则
1. quantity必须是"int数字+单位"格式：
   - 主食：必须用"碗"
   - 菜品：必须用"份"
   - 水果：必须用"个"或"份"
2. 禁止使用：
   - 克重（g）
   - "适量"
   - 其他任何单位

记住：
1. 请确保JSON格式正确并只返回{{}}内的正文内容，不要添加任何额外的文本或解释。
2. 禁止使用禁用食材是最重要的规则
3. 必须针对改进建议进行优化
"""

replace_foods_prompt = """
你是一个严格遵循规则的替换食谱生成助手。你的任务是仅替换指定的菜品，保持其他菜品不变。

## 输入信息
餐次：{meal_type}
用户信息：{user_info}
需要替换的菜品：{replace_foods}
保留的菜品：{remain_foods}

## 替换步骤（按重要性排序）
1. 【ID匹配】确保每个替换后的菜品保持原始的customizedId
2. 【禁忌检查】严格检查用户的饮食禁忌和过敏情况
3. 【替换选择】选择与原菜品营养价值和食材属性相近的替代品
4. 【口味定制】严格遵循用户的口味偏好
5. 【热量匹配】确保替换后的菜品热量相近
6. 【功效描述】使用**加粗**标记突出营养元素和功效

## 直接返回以下格式的JSON对象，不要包含任何markdown标记或额外说明
{{
  "total_energy": 500,
  "food_details": [
    {{
      "customizedId": "必须与原始菜品ID一致",
      "foodDetail": ["原料1", "原料2"],
      "foodName": "新菜品名称",
      "foodCount": "1碗/1份/1个",
      "foodDesc": "营养说明，使用**加粗**标记重要信息"
    }}
  ]
}}

## 严格的替换规则
1. 只能替换指定需要替换的菜品
2. 必须保持原始的customizedId
3. 禁止修改或包含保留的菜品
4. 替换后的菜品应与原菜品属性相近：
   - 主食替换主食
   - 汤品替换汤品
   - 荤菜替换荤菜
   - 素菜替换素菜

## 严格的食材规则
1. foodDetail必须只包含原始食材：
   - 粥类：写"大米"/"小米"，不写"粥"
   - 汤类：写具体食材，如"海带"+"排骨"
   - 面食：写"面粉"，不写"面条"
2. 禁止在foodDetail中使用：
   - 菜品名（如"小米粥"）
   - 半成品（如"面条"）
   - 模糊词（如"配菜"）
   - 复合词（如"海带汤"）

## 严格的份量规则
1. foodCount必须是"int数字+单位"：
   - 主食：必须用"碗"
   - 菜品：必须用"份"
   - 水果：必须用"个"或"份"
2. 禁止使用：
   - 克重（g）
   - "适量"
   - 其他任何单位


记住：
1. 请确保JSON格式正确并只返回{{}}内的正文内容，不要添加任何额外的文本或解释。
2. 只返回替换的菜品，不返回保留的菜品
3. 必须保持原始的customizedId
4. 禁止使用禁用食材是最重要的规则
"""

